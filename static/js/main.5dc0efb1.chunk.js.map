{"version":3,"sources":["components/Section/Section.module.css","components/Input/Input.module.css","components/ButtonAdd/ButtonAdd.module.css","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.js","components/Input/Input.js","components/ButtonAdd/buttonAdd.js","redux/contacts/contacts-actions.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","Input","type","name","pattern","value","handleInputChange","label","input","required","onChange","autoComplete","ButtonAdd","addBtn","actions","addField","createAction","removeField","setUpFilter","connect","state","contacts","dispatch","addItem","useState","setName","number","setNumber","handleInput","event","currentTarget","form","onSubmit","preventDefault","items","find","contact","alert","id","uuidv4","filterContacts","filter","normalizedFilter","toLowerCase","includes","filteredContacts","removeItem","list","map","text","phone","removeBtn","onClick","Contacts","setFilter","length","itemsReducer","createReducer","payload","filterReducer","_","contactsReducer","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","expandedStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5dc0efb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__z-LP7\",\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"ButtonAdd_addBtn__BXYBD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__34Twh\"};","import React from 'react';\nimport styles from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: '',\n  children: [],\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Input.module.css';\n\nconst Input = ({ type, name, pattern, title, value, handleInputChange, label }) => (\n  <label className={styles.label}>\n    {label}:\n    <input\n      className={styles.input}\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      required\n      value={value}\n      onChange={handleInputChange}\n      autoComplete=\"off\"\n    />\n  </label>\n);\n\nInput.defaultProps = {\n  type: 'text',\n  label: '',\n};\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string,\n};\n\nexport default Input;\n","import React from 'react';\nimport styles from './ButtonAdd.module.css';\n\nconst ButtonAdd = () => (\n  <button className={styles.addBtn} type=\"submit\">\n    Add contact\n  </button>\n);\n\nexport default ButtonAdd;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst addField = createAction('phonebook/add');\nconst removeField = createAction('phonebook/remove');\nconst setUpFilter = createAction('phonebook/filter');\n\nconst actions = { addField, removeField, setUpFilter };\nexport default actions;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Input from '../Input';\nimport ButtonAdd from '../ButtonAdd';\n\nimport styles from './Form.module.css';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst Form = ({ addItem, contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInput = event => {\n    switch (event.currentTarget.name) {\n      case 'name':\n        setName(event.currentTarget.value);\n        return;\n      case 'number':\n        setNumber(event.currentTarget.value);\n        return;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = event => {\n    event.preventDefault();\n\n    if (contacts.items.find(contact => contact.name === name)) {\n      alert('Attempt to create existing contact!');\n      return;\n    }\n\n    addItem({ name, id: uuidv4(), number });\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.form} onSubmit={onFormSubmit}>\n      <Input\n        label=\"Name\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        handleInputChange={handleInput}\n        value={name}\n      />\n      <Input\n        label=\"Phone number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        value={number}\n        handleInputChange={handleInput}\n      />\n      <ButtonAdd />\n    </form>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\nconst mapDispatchToProps = dispatch => ({\n  addItem: value => dispatch(actions.addField(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './ContactsList.module.css';\n\nimport actions from '../../redux/contacts/contacts-actions';\n\nconst ContactsList = ({ filteredContacts, removeItem }) => (\n  <ul className={styles.list}>\n    {filteredContacts.map(({ name, id, number }) => (\n      <li key={id} className={styles.contact}>\n        <p className={styles.text}>\n          <span className={styles.name}>{name}</span> <span className={styles.phone}>{number}</span>\n        </p>\n        <button className={styles.removeBtn} type=\"button\" onClick={() => removeItem(id)}>\n          Remove contact\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nconst filterContacts = (filter, items) => {\n  const normalizedFilter = filter.toLowerCase();\n  return items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\n};\n\nconst mapStateToProps = ({ contacts }) => {\n  return {\n    filteredContacts: filterContacts(contacts.filter, contacts.items),\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  removeItem: value => dispatch(actions.removeField(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Input from '../Input';\nimport ContactsList from '../ContactsList';\nimport styles from './Contacts.module.css';\nimport { connect } from 'react-redux';\nimport actions from './../../redux/contacts/contacts-actions';\n\nconst Contacts = ({ title, contacts, setFilter }) => {\n  const handleFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  return (\n    <>\n      <h2 className={styles.title}>{title}</h2>\n      <Input\n        label=\"Find contacts by name:\"\n        type=\"text\"\n        name=\"filter\"\n        value={contacts.filter}\n        handleInputChange={handleFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      />\n      <ContactsList />\n    </>\n  );\n};\n\nContacts.defaultProps = {\n  title: '',\n};\nContacts.propTypes = {\n  title: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  setFilter: value => dispatch(actions.setUpFilter(value)),\n  removeItem: value => dispatch(actions.removeField(value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import './App.css';\nimport React from 'react';\n\nimport Section from './components/Section';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\n\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => {\n  const { items } = contacts;\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <Form />\n        {items.length > 0 && <Contacts title=\"Contacts\" />}\n      </Section>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './contacts-actions';\nconst itemsReducer = createReducer([], {\n  [actions.addField]: (state, { payload }) => [...state, payload],\n  [actions.removeField]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.setUpFilter]: (_, { payload }) => payload,\n});\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsReducer } from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contactsList',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\nconst persistor = persistStore(store);\nconst expandedStore = { store, persistor };\n\nexport default expandedStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { Provider } from 'react-redux';\nimport expandedStore from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={expandedStore.store}>\n      <PersistGate loading=\"loading...\" persistor={expandedStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"text\":\"ContactsList_text__1O8Sh\",\"contact\":\"ContactsList_contact__2MNvd\",\"name\":\"ContactsList_name__1AS-g\",\"phone\":\"ContactsList_phone__3QY12\",\"removeBtn\":\"ContactsList_removeBtn__ApSAT\"};"],"sourceRoot":""}